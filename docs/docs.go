// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/healthz": {
            "get": {
                "description": "simple health check handler that returns 200 OK and is used for Kubernetes liveness probes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manga": {
            "get": {
                "description": "Lists all manga in the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "manga"
                ],
                "summary": "List all manga",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Manga"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a manga in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "manga"
                ],
                "summary": "Create a manga",
                "parameters": [
                    {
                        "description": "Manga",
                        "name": "manga",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Manga"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Manga"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manga/volume": {
            "get": {
                "description": "Lists all volumes in the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volume"
                ],
                "summary": "List all volumes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Volume"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a volume in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volume"
                ],
                "summary": "Create a volume",
                "parameters": [
                    {
                        "description": "Volume",
                        "name": "volume",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Volume"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Volume"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manga/volume/{id}": {
            "get": {
                "description": "Gets a volume from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "volume"
                ],
                "summary": "Get a volume by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Volume ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Volume"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/manga/{id}": {
            "get": {
                "description": "Gets a manga from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "manga"
                ],
                "summary": "Get a manga",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Manga ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Manga"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Chapter": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID is the chapter ID used to make it unique in the database",
                    "type": "string"
                },
                "number": {
                    "description": "Number is the chapter number",
                    "type": "integer"
                },
                "title": {
                    "description": "Title is the title of the chapter",
                    "type": "string"
                },
                "volumeID": {
                    "description": "VolumeID is the volume ID that the chapter belongs to",
                    "type": "string"
                }
            }
        },
        "models.Manga": {
            "type": "object",
            "properties": {
                "author": {
                    "description": "Author is the author of the manga",
                    "type": "string"
                },
                "id": {
                    "description": "ID is the manga ID used to make it unique in the database",
                    "type": "string"
                },
                "magazine": {
                    "description": "Magazine is the magazine the manga was published in",
                    "type": "string"
                },
                "publisher": {
                    "description": "Publisher is the publisher of the manga",
                    "type": "string"
                },
                "title": {
                    "description": "Title is the title of the manga",
                    "type": "string"
                },
                "volumes": {
                    "description": "Volumes is a slice of volumes",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Volume"
                    }
                }
            }
        },
        "models.Volume": {
            "type": "object",
            "properties": {
                "chapters": {
                    "description": "Chapters is a slice of chapters",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Chapter"
                    }
                },
                "id": {
                    "description": "ID is the volume ID used to make it unique in the database",
                    "type": "string"
                },
                "isbn": {
                    "description": "ISBN is the International Standard Book Number",
                    "type": "string"
                },
                "mangaID": {
                    "description": "MangaID is the manga ID that the volume belongs to",
                    "type": "string"
                },
                "number": {
                    "description": "Number is the volume number",
                    "type": "integer"
                },
                "releaseDate": {
                    "description": "ReleaseDate is the date the volume was released",
                    "type": "string"
                },
                "title": {
                    "description": "Title is the title of the volume",
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Chi No Wadachi API",
	Description:      "This is a simple API that is used to demonstrate how to use Chi as a web framework.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
